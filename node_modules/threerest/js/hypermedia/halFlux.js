"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var SELF_LINK_PROP = "self";

/**
 * Class for decorate data with HAL metadata.
 * @class
 */

var HalFlux = function () {
  function HalFlux(data) {
    _classCallCheck(this, HalFlux);

    this._links = {};
    this.data = data;
  }

  _createClass(HalFlux, [{
    key: "updateLinks",
    value: function updateLinks(currentUrl) {
      this._links[SELF_LINK_PROP] = { href: currentUrl };
    }
  }, {
    key: "selfLink",
    set: function set(value) {
      this._links[SELF_LINK_PROP] = { href: value };
    }
  }], [{
    key: "decorateSimpleObject",
    value: function decorateSimpleObject(object, requestParameters) {
      if (object) {
        if (object.halLink) {
          object._links = {};
          object._links[SELF_LINK_PROP] = { href: object.halLink.call(object, requestParameters) };
        }
        for (var attrib in object) {
          if (object[attrib] && Array.isArray(object[attrib])) {
            object[attrib].forEach(function (elt, index) {
              if (elt && elt.halLink) {
                HalFlux.decorateSimpleObject(elt, requestParameters);
              }
            });
          } else if (object[attrib] && object[attrib].halLink) {
            HalFlux.decorateSimpleObject(object[attrib], requestParameters);
          }
        }
      }
    }
  }]);

  return HalFlux;
}();

exports.default = HalFlux;