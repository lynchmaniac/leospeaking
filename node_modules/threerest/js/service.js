"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _class, _temp;

var _express = require("express");

var _methods = require("./services/methods");

var _methods2 = _interopRequireDefault(_methods);

var _restError = require("./exceptions/restError");

var _restError2 = _interopRequireDefault(_restError);

var _notFoundError = require("./exceptions/notFoundError");

var _notFoundError2 = _interopRequireDefault(_notFoundError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * Class for Decorator REST service (entrypoint).
 * @class
 */
var Service = (_temp = _class = function () {
  function Service() {
    _classCallCheck(this, Service);
  }

  _createClass(Service, null, [{
    key: "path",


    /**
    * Decorator for REST service class. Must use with method decorators.
    * @method
    * @param {string} path - the path of the service Rest.
    */
    value: function path(_path) {

      return function decorate(target) {
        if (!target.prototype[Service.globalKey]) {
          target.prototype[Service.globalKey] = {};
        }
        target.prototype[Service.globalKey][Service.pathKey] = _path;

        if (!target.prototype[Service.loadFct]) {
          target.prototype[Service.loadFct] = function (expressInst) {
            var _this = this;

            var childsValidate = [];
            if (target.prototype[Service.globalKey]) {

              for (var attrib in target.prototype[Service.globalKey]) {

                if (_methods2.default.METHODS[attrib]) {
                  var router = (0, _express.Router)();

                  var _loop = function _loop() {
                    var fct = target.prototype[Service.globalKey][attrib][fctName][Service.fctKey];
                    router[attrib](target.prototype[Service.globalKey][attrib][fctName][Service.pathKey], function (req, res, next) {
                      var p = new Promise(function (resolve) {
                        resolve(req.params || true);
                      });
                      if (fct.convertBefore) {
                        p = p.then(function (params) {
                          return fct.convertBefore(params);
                        }).then(function (value) {
                          return fct.call(_this, value, req, res);
                        });
                      } else {
                        p = p.then(function (params) {
                          return fct.call(_this, params, req, res);
                        });
                      }
                      p = p.then(function (value) {
                        res.send(value);
                      }).catch(function (e) {
                        if (e.code) {
                          res.status(e.code).send(e.message);
                        } else {
                          res.status(500).send(e);
                        }
                      });
                    });
                  };

                  for (var fctName in target.prototype[Service.globalKey][attrib]) {
                    _loop();
                  }
                  expressInst.use(target.prototype[Service.globalKey][Service.pathKey], router);
                }
              }
            }
          };
        }
      };
    }
  }]);

  return Service;
}(), _class.globalKey = "__3rest__", _class.pathKey = "__path__", _class.fctKey = "__call__", _class.loadFct = "__load__", _temp);
exports.default = Service;
;